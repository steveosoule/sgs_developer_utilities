<MIVA STANDARDOUTPUTLEVEL="" ERROROUTPUTLEVEL=""><MvEXIT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"	VALUE = "sgs_developer_utilities">
	<MvASSIGN NAME = "l.module:name"	VALUE = "SGS: Developer Utilities">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Steven G. Soule (ssoule@miva.com)">
	<MvASSIGN NAME = "l.module:version"	VALUE = "1.1.1">
	<MvASSIGN NAME = "l.module:api_ver"	VALUE = "5.21">
	<MvASSIGN NAME = "l.module:features"	VALUE = "util">
	<MvASSIGN NAME = "l.module:description"	VALUE = "A Miva module with a set of helper functions to make development easier. Visit http://stevensoule.com/sgs_developer_utilities for more information.">
</MvFUNCTION>

<MvFUNCTION NAME = "XML_Stringify" PARAMETERS = "data var, parent_tag" STANDARDOUTPUTLEVEL = "">

	<MvASSIGN NAME = "l.xml" VALUE = "{ '' }">

	<MvASSIGN NAME = "l.parent_tag_slug" VALUE = "{ glosub(slugify(l.parent_tag), '-', '_') }">

	<MvCOMMENT>
		| Members/Keys/Associate Arrays
	</MvCOMMENT>
	<MvASSIGN NAME = "l.member_count"	VALUE = "{ miva_struct_members( l.data, l.members ) }">
	<MvIF EXPR = "{ l.member_count GT 0 }">
		<MvIF EXPR = "{ l.parent_tag NE l.parent_tag_slug OR isdigit(l.parent_tag) }">
			<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ '<item name=\"' $ l.parent_tag $ '\">' }">
		<MvELSE>
			<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ '<' $ l.parent_tag $ '>' }">
		</MvIF>
			<MvFOREACH INDEX = "l.pos" ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ l.member_count }">
				<MvREFERENCEARRAY NAME = "l.member_value" VARIABLE = "l.data">
					<MvMEMBER NAME = "{ l.member }">
				</MvREFERENCEARRAY>
				<MvASSIGN NAME = "l.has_children_or_siblings" VALUE = "{ miva_array_elements(l.member_value) OR miva_struct_members(l.member_value, l.member_value_members) }"/>
				<MvIF EXPR = "{ l.has_children_or_siblings }">
					<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ XML_Stringify( l.member_value, l.member ) }">
				<MvELSE>
					<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ '<' $ l.member $ '>' }">
						<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ XML_Stringify( l.member_value, l.member ) }">
					<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ '</' $ l.member $ '>' }">
				</MvIF>
			</MvFOREACH>
		<MvIF EXPR = "{ l.parent_tag NE l.parent_tag_slug OR isdigit(l.parent_tag) }">
			<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ '</item>' }">
		<MvELSE>
			<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ '</' $ l.parent_tag $ '>' }">
		</MvIF>
		<MvFUNCTIONRETURN VALUE = "{ l.xml }">
	</MvIF>


	<MvCOMMENT>
		| Index Based Arrays
	</MvCOMMENT>
	<MvASSIGN NAME = "l.element_count"	VALUE = "{ miva_array_elements( l.data ) }">
	<MvIF EXPR = "{ l.element_count GT 0 }">
		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.element" ARRAY = "l.data" COUNT = "{ l.element_count }">
			<MvASSIGN NAME = "l.member_count"	VALUE = "{ miva_struct_members( l.element, l.members ) }">
			<MvIF EXPR = "{ l.member_count EQ 0 }">
				<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ '<' $ l.parent_tag $ '>' $ encodeentities(l.element) $ '</' $ l.parent_tag $ '>' }">
			<MvELSE>
				<MvASSIGN NAME = "l.xml" VALUE = "{ l.xml $ XML_Stringify( l.element, l.parent_tag ) }">
			</MvIF>
		</MvFOREACH>
		<MvFUNCTIONRETURN VALUE = "{ l.xml }">
	</MvIF>


	<MvCOMMENT>
		| Content/Value
	</MvCOMMENT>
	<MvFUNCTIONRETURN VALUE = "{ encodeentities(l.data) }">

</MvFUNCTION>


<MvFUNCTION NAME = "XML_Output" PARAMETERS = "data, parent_tag" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ XML_Stringify(l.data, l.parent_tag) }" />
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Stringify" PARAMETERS = "data var" STANDARDOUTPUTLEVEL = "">

	<MvASSIGN NAME = "l.json" VALUE = "{ '' }">

	<MvCOMMENT>
		| Members/Keys/Associate Arrays
	</MvCOMMENT>
	<MvASSIGN NAME = "l.member_count"	VALUE = "{ miva_struct_members( l.data, l.members ) }">
	<MvIF EXPR = "{ l.member_count GT 0 }">
		<MvASSIGN NAME = "l.json" VALUE = "{ l.json $ '{' }">
			<MvFOREACH INDEX = "l.pos" ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ l.member_count }">
				<MvIF EXPR = "{ l.pos GT 1 }">
					<MvASSIGN NAME = "l.json" VALUE = "{ l.json $ ',' }">
				</MvIF>

				<MvREFERENCEARRAY NAME = "l.member_value" VARIABLE = "l.data">
					<MvMEMBER NAME = "{ l.member }">
				</MvREFERENCEARRAY>

				<MvASSIGN NAME = "l.json" VALUE = "{ l.json $ '"' $ encodejavascriptstring( l.member ) $ '": ' $ JSON_Stringify( l.member_value ) }">
			</MvFOREACH>
		<MvASSIGN NAME = "l.json" VALUE = "{ l.json $ '}' }">

		<MvFUNCTIONRETURN VALUE = "{ l.json }">
	</MvIF>

	<MvCOMMENT>
		| Index Based Arrays
	</MvCOMMENT>
	<MvASSIGN NAME = "l.element_count"	VALUE = "{ miva_array_elements( l.data ) }">
	<MvIF EXPR = "{ l.element_count GT 0 }">
		<MvASSIGN NAME = "l.json" VALUE = "{ l.json $ '[' }">
		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.element" ARRAY = "l.data" COUNT = "{ l.element_count }">
			<MvIF EXPR = "{ l.pos GT 1 }">
				<MvASSIGN NAME = "l.json" VALUE = "{ l.json $ ',' }">
			</MvIF>

			<MvASSIGN NAME = "l.json" VALUE = "{ l.json $ JSON_Stringify( l.element ) }">
		</MvFOREACH>
		<MvASSIGN NAME = "l.json" VALUE = "{ l.json $ ']' }">

		<MvFUNCTIONRETURN VALUE = "{ l.json }">
	</MvIF>

	<MvCOMMENT>
		| Content/Value
	</MvCOMMENT>
	<MvIF EXPR = "{ isdigit( l.data ) 	AND
					NOT ISNULL l.data	AND
					NOT ( len_var( l.data ) GE 2 AND substring_var( l.data, 1, 1 ) EQ '0' ) }">
		<MvFUNCTIONRETURN VALUE = "{ l.json $ l.data }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ l.json $ '"' $ encodejavascriptstring( l.data ) $ '"' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Output" PARAMETERS = "data" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Stringify(l.data) }" />
</MvFUNCTION>